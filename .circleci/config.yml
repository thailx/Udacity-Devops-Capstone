version: "2.1"
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
  docker: circleci/docker@2.1.2
  aws-cli: circleci/aws-cli@3.1.1
jobs:
  run-lint:
    docker:
      - image: "python:3.7.3-stretch"
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
      - run:
          name: Run lint
          command: |
            . venv/bin/activate
            make lint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
  build-and-push:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: thailx/flaskapp/capstone
          tag: "1.0"
      - docker/push:
          image: thailx/flaskapp/capstone
          tag: "1.0"
  deploy-eks:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - checkout
      - aws-cli/setup
      - run:
          name: Check cluster
          command: |
            VALIDATE=$(aws eks describe-cluster --name eks-capstone --query 'cluster.name')
            echo "$VALIDATE" > ~/validate
            if cat ~/validate | grep "eks-capstone"
            then
              echo "Cluster eks-capstone already exist. Skipping job"
              circleci-agent step halt
              exit 0
            else
              echo "Attempting to create the cluster eks-capstone"
            fi
      - aws-eks/create-cluster:
          cluster-name: eks-capstone
          nodegroup-name: eks-capstone-nodes
          node-type: t3.medium
          nodes-min: 2
          nodes-max: 3
  deploy-application:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: eks-capstone
          install-kubectl: true
      - run:
          name: Test kubectl
          command: |  
            kubectl get services
            kubectl get nodes
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: ".circleci/files/deployment.yml"
          resource-name: deployment/capstone
          show-kubectl-command: true
      - kubernetes/create-or-update-resource:
          resource-file-path: ".circleci/files/service.yml"
          show-kubectl-command: true
      - run:
          name: get deployment status
          command: kubectl get svc capstone
  test-deployment:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: eks-capstone
          install-kubectl: true
      - run:
          name: Test Load Balancer endpoint
          command: |
            sleep 30
            EXTERNAL_IP=$(kubectl get service capstone | awk '{print $4}' | tail -n1)
            echo "${EXTERNAL_IP}"
            if curl --insecure --silent --retry 10 http://${EXTERNAL_IP} | grep "Sklearn Prediction Home"
            then
              exit 0
            else
              exit 1
            fi
workflows:
  deployment:
    jobs:
      - run-lint
      - build-and-push:
          requires: [run-lint]
      - deploy-eks:
          requires: [build-and-push]
      - deploy-application:
          requires: [deploy-eks]
      - test-deployment:
          requires: [deploy-application]
